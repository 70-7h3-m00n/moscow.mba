import stls from './EducationROI.module.sass'
import cn from 'classnames'
import { EducationROIProps } from './types'

import { Wrapper } from '@/components/layout'
import { useContext, useEffect, useState } from 'react'
import { IconTriangle } from '@/components/icons'
import { ProgramPageContext } from 'modules/program-page/fractals/context/context'
import { toNumberWithSpaces } from '@/helpers/index'
import { Range } from 'react-range'

export const EducationROI = ({ className, ...rest }: EducationROIProps) => {
	const { state } = useContext(ProgramPageContext)
	const { program } = state

	const salary = program?.futureJob?.futureJobSalary || null

	const range = {
		min: 0,
		max: 2
	}

	const [inputPosition, setInputPosition] = useState<number>(range.min)
	const [bubblePosition, setBubblePosition] = useState<number>(0)

	const dataROI = [
		{
			salary: `${toNumberWithSpaces(salary?.junior) || '50 000'}`,
			title: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
			experience: '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
			subtitle:
				'–ó–∞ 1-2 –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ —Å–º–æ–∂–µ—Ç–µ –æ–∫—É–ø–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–µ',
			description: '–í –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã',
			emoji: 'üôÇ'
		},
		{
			salary: `${toNumberWithSpaces(salary?.middle) || '100 000'}`,
			title: 'Middle',
			experience: '–û–ø—ã—Ç 12 –º–µ—Å—è—Ü–µ–≤',
			subtitle:
				'–í —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞ –ø—Ä–æ–¥–≤–∏–Ω–µ—Ç–µ—Å—å –¥–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ middle-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –¥–æ—Ö–æ–¥–∞ –≤–¥–≤–æ–µ',
			description: 'Middle-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç	(–æ–ø—ã—Ç 1-3 –≥–æ–¥–∞)',
			emoji: 'ü§ë'
		},
		{
			salary: `${toNumberWithSpaces(salary?.senior) || '160 000'}`,
			title: 'Senior',
			experience: '–û–ø—ã—Ç 36 –º–µ—Å—è—Ü–µ–≤',
			subtitle:
				'–í —Ç–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –ª–µ—Ç —Å–º–æ–∂–µ—Ç–µ –∑–∞–Ω—è—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤–µ–¥—É—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –æ–∫—É–ø–∏–≤ –æ–±—É—á–µ–Ω–∏–µ',
			description: 'Senior-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç	(–æ–ø—ã—Ç –±–æ–ª–µ–µ 3 –ª–µ—Ç)',
			emoji: 'üí∞'
		}
	]

	useEffect(() => {
		const value = Number(
			((inputPosition - range.min) * 100) / (range.max - range.min)
		)
		setBubblePosition(value)
	}, [inputPosition])

	return (
		<section className={cn(className, stls.container)} {...rest}>
			<Wrapper classNames={[stls.wrapper]}>
				<div className={stls.titleWrapper}>
					<h2 className={stls.title}>
						–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –æ–∫—É–ø–∏—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
					</h2>
					<p className={stls.subtitle}>
						–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ –≤–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤–º–µ—Å—Ç–µ —Å –æ–ø—ã—Ç–æ–º.
						–ò&nbsp;—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –æ–∫—É–ø–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è –≤
						–ø—Ä–æ–≥—Ä–∞–º–º—É
					</p>
				</div>
				<div className={stls.content}>
					<div className={cn(stls.content__item, stls.left)}>
						<p className={stls.left__title}>
							{dataROI[inputPosition].subtitle}
						</p>
						<p className={stls.left__description}>
							{dataROI[inputPosition].description}
						</p>
					</div>
					<div className={cn(stls.content__item, stls.right)}>
						<div>
							<h3 className={stls.right__title}>–ó–∞—Ä–ø–ª–∞—Ç—ã</h3>
							<p className={stls.right__subtitle}>–ø–æ –¥–∞–Ω–Ω—ã–º HH.ru</p>
						</div>

						<div
							className={cn(stls.range, {
								[stls.middle]: inputPosition === 1,
								[stls.senior]: inputPosition === 2
							})}
						>
							<div
								className={stls.bubble}
								style={{
									left: `calc(${bubblePosition}% + (${(50 - bubblePosition) /
										350}rem))`
								}}
							>
								{dataROI[inputPosition].salary} <span>‚ÇΩ</span>
								<IconTriangle className={stls.bubble__arrow} />
							</div>
							<Range
								step={1}
								min={range.min}
								max={range.max}
								values={[inputPosition]}
								onChange={values => setInputPosition(values[0])}
								renderTrack={({ props, children }) => (
									<div
										className={cn(stls.input, {
											[stls.junior]: inputPosition === 0,
											[stls.middle]: inputPosition === 1,
											[stls.senior]: inputPosition === 2
										})}
										{...props}
									>
										{children}
									</div>
								)}
								renderThumb={({ props }) => (
									<div {...props} className={stls.slider}>
										{dataROI[inputPosition].emoji}
									</div>
								)}
							/>
							<div className={stls.rangeDescription}>
								{dataROI.map((item, idx) => (
									<div className={stls.rangeDescription__item} key={item.title}>
										<p
											className={cn(stls.rangeDescription__title, {
												[stls.active]: idx === inputPosition
											})}
										>
											{item.title}
										</p>
										<p className={stls.rangeDescription__experience}>
											{item.experience}
										</p>
									</div>
								))}
							</div>
						</div>
					</div>
				</div>
			</Wrapper>
		</section>
	)
}
